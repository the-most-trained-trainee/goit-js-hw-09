{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,mBAAqBC,SAASC,cAAc,SAE5CF,mBAAmBG,iBAAiB,UAapC,SAAkBC,GAChBA,EAAMC,iBATAC,EAAW,IAAIC,SAASP,oBAC1BQ,EAAa,GACjBF,EAASG,SAAQ,SAACC,EAAOC,GACvBH,EAAWG,GAAQD,KAOrBE,EALOJ,EANT,IACQF,EACFE,EAUJ,IAAK,IAAIK,EAAI,EAAGA,EAAID,EAAWE,OAAQD,IACrCE,EAAcF,EAAI,EAAGG,OAAOJ,EAAWK,OAASD,OAAOJ,EAAWM,MAAQL,GAE5ET,EAAMe,cAAcC,WAjBtB,IAAIR,OAAaS,EAoBjB,SAASN,EAAcO,EAAUL,GACf,IAAIM,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQM,EAAAhC,GAASiC,OAAOC,QAAQ,WAAmCC,OAAxBX,EAAS,iBAAqBW,OAANhB,EAAM,SAGzEQ,EAAOK,EAAAhC,GAASiC,OAAOG,QAAQ,WAAmCD,OAAxBX,EAAS,iBAAqBW,OAANhB,EAAM,WAEzEA,MAGFkB,MAAK,SAAAC,G,OAAUC,QAAQC,IAAIF,MAC3BG,OAAM,SAAAH,G,OAAUC,QAAQC,IAAIF,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\ncreatePromisesForm = document.querySelector(\".form\");\n\ncreatePromisesForm.addEventListener(\"submit\", onSubmit);\n\nlet formOutPut = undefined;\n\nfunction formDataReceipt() {\n  const formData = new FormData(createPromisesForm);\n  let formOutPut = {};\n  formData.forEach((value, name) => {\n    formOutPut[name] = value;\n  });\n  return formOutPut;\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  formOutPut = formDataReceipt(event);\n  for (let i = 0; i < formOutPut.amount; i++) {\n    createPromise(i + 1, Number(formOutPut.delay) + Number(formOutPut.step) * i);\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // resolve(`Promise ${position} resolved in ${delay} ms`);\n        resolve(Notiflix.Notify.success(`Promise ${position} resolved in ${delay} ms`));\n      } else {\n        // reject(`Promise ${position} rejected in ${delay} ms`);\n        reject(Notiflix.Notify.failure(`Promise ${position} rejected in ${delay} ms`));\n      }\n    }, delay);\n  });\n  promise\n    .then(result => console.log(result))\n    .catch(result => console.log(result))\n}"],"names":["$iU1Pc","parcelRequire","createPromisesForm","document","querySelector","addEventListener","event","preventDefault","formData","FormData","formOutPut1","forEach","value","name","$ce04d3a99e08e73b$var$formOutPut","i","amount","$ce04d3a99e08e73b$var$createPromise","Number","delay","step","currentTarget","reset","undefined","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","concat","failure","then","result","console","log","catch"],"version":3,"file":"03-promises.a24e1ee7.js.map"}