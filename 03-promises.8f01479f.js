let e;function r(e,r){new Promise(((t,o)=>{const n=Math.random()>.3;setTimeout((()=>{n?t(`Promise ${e} resolved in ${r} ms`):o(`Promise ${e} rejected in ${r} ms`)}),r)})).then((e=>console.log(e))).catch((e=>console.log(e)))}createPromisesForm=document.querySelector(".form"),createPromisesForm.addEventListener("submit",(function(t){t.preventDefault(),e=function(){const e=new FormData(createPromisesForm);let r={};return e.forEach(((e,t)=>{r[t]=e})),r}();for(let t=0;t<e.amount;t++)r(t+1,Number(e.delay)+Number(e.step)*t);t.currentTarget.reset()}));
//# sourceMappingURL=03-promises.8f01479f.js.map
