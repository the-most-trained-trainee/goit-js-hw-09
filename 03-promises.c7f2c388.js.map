{"mappings":"YAAAA,mBAAqBC,SAASC,cAAc,SAE5CF,mBAAmBG,iBAAiB,UAapC,SAAkBC,GAChBA,EAAMC,iBATAC,EAAW,IAAIC,SAASP,oBAC1BQ,EAAa,GACjBF,EAASG,SAAQ,SAACC,EAAOC,GACvBH,EAAWG,GAAQD,KAOrBE,EALOJ,EANT,IACQF,EACFE,EAUJ,IAAK,IAAIK,EAAI,EAAGA,EAAID,EAAWE,OAAQD,IACvBD,EAAWG,MAAOH,EAAWI,UAOvCC,OAGAC,EAHgBC,KAAKC,SAAW,GAGtB,IAAIC,QARpBjB,EAAMkB,cAAcC,WAjBtB,IAAIX,OAAaY,E","sources":["src/js/03-promises.js"],"sourcesContent":["createPromisesForm = document.querySelector(\".form\");\n\ncreatePromisesForm.addEventListener(\"submit\", onSubmit);\n\nlet formOutPut = undefined;\n\nfunction formDataReceipt() {\n  const formData = new FormData(createPromisesForm);\n  let formOutPut = {};\n  formData.forEach((value, name) => {\n    formOutPut[name] = value;\n  });\n  return formOutPut;\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  formOutPut = formDataReceipt(event);\n  for (let i = 0; i < formOutPut.amount; i++) {\n    createPromise(formOutPut.delay, formOutPut.step);\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n\n  const shouldResolve = Math.random() > 0.3;\n\n\n  const promise = new Promise();\n\n\n\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\n\n// 43 17 "],"names":["createPromisesForm","document","querySelector","addEventListener","event","preventDefault","formData","FormData","formOutPut1","forEach","value","name","$ce04d3a99e08e73b$var$formOutPut","i","amount","delay","step","shouldResolve","promise","Math","random","Promise","currentTarget","reset","undefined"],"version":3,"file":"03-promises.c7f2c388.js.map"}